FORMAT: 1A
HOST: http://ticketstore.apphb.com/api/

# TicketStore

Bem-vindo,

Queremos que você conheça uma nova forma de vender ingressos online.
Você poderá integrar seu sistema com a plataforma TicketStore com total flexibilidade. 
Veja a seguir a descrição dos principais recursos de nossa API:

## Informações Gerais

Este manual tem como objetivo descrever o funcionamento da API 
aos desenvolvedores de sistemas de informática que desejam integrar outros 
sistemas à nossa plataforma. Praticamente todas as operações realizadas através de
nossa API, poderão ser feitas pelo nosso site. A grande vantagem é que o 
desenvolvedor poderá montar sua própria interface e unir em tempo real 
as informações de outros sistemas com as informações da nossa plataforma.

Antes de acessar os métodos de criação de pedido, consulta de usuários ou 
consulta de cartões de crédito do usuário, será necessária uma autenticação 
que gerará um código (`SecurityToken`) que deverá ser passado no `header` 
de cada solicitação.

A nossa API interpreta a requisição e valida cada um dos campos enviados. 
Quando houver algum campo com dado inválido, a API retornará 
uma resposta contendo os campos inválidos e o motivo do erro.

## HTTP Response Codes

A nossa API valida os diversos campos enviados na requisição (request) 
antes de prosseguir com a consulta de eventos, criação de usuários ou 
criação de pedidos. Utilizamos os códigos HTTP convencionados pela W3C 
para resposta das requisições, conforme tabela abaixo:

|Código  | Nome                     | Descrição                                                             |
|--------|--------------------------|-----------------------------------------------------------------------|
| 200    |`OK`                      | Sucesso                                                               |                                       
| 201    |`Created`                 | Criado                                                                |
| 400    |`Bad Request`             | Requisição inválida (campos requeridos ou informados incorretamente   |
| 401    |`Unauthorized`            | Acesso ao recurso não autorizado                                      |
| 404    |`Not Found`               | Recurso não encontrado                                   |
| 405    |`Method Not Allowed`      | Método não permitido                                                  |
| 500    |`Internal Server Error`   | Erro interno em nosso servidor                                        |


## É hora de integrar!

Agora que já conhece melhor o modelo de nossa API, você já pode iniciar o 
desenvolvimento de sua aplicação.

# Group Acesso

Recurso para geração da chave de acesso (`SecurityToken`) aos recursos protegidos da API.

## Autenticação [/access]

Permite criar `SecurityToken` com base nas credenciais do Usuário.

## Campos do Usuário

| Nome              | Descrição                                     |
|-------------------|-----------------------------------------------|
| `email`           | E-mail do Usuário                             |
| `password`        | Senha do Usuário                              |

### Criação do SecurityToken [POST]

+ Request (application/json)

    + Body

            {
                "email": "jose@email.com",
                "password": "abc123"
            }

+ Response 200 (application/json)
    
    + Header
    
            SecurityToken: dXNlcjpwYXNzd29yZA==

+ Request Credencial Inválida (application/json)

    + Body

            {
                "email": "jose@email.com",
                "password": "senhainvalida"
            }

+ Response 401 (application/json)
    
    + Body
    
            {
                "message": "User not authorized."
            }    

# Group Usuários

Recurso para manutenção de Usuários.

## Novo Usuário [/users]

Permite a criação de Usuários.

## Campos do Usuário

| Nome              | Descrição                                     |
|-------------------|-----------------------------------------------|
| `userId`          | Identificador do Usuário                      |
| `name`            | Nome completo do Usuário                      |
| `ssn`             | CPF do Usuário                                |
| `gender`          | Sexo do Usuário                               |
| `birthdate`       | Data de Nascimento do Usuário                 |
| `email`           | E-mail do Usuário                             |
| `password`        | Senha do Usuário                              |
| `address.line1`   | Endereço do Usuário                           |
| `address.line2`   | Complemento do endereço do Usuário            |
| `address.number`  | Número do endereço do Usuário                 |
| `address.state`   | Estado do Usuário                             |
| `address.zipCode` | CEP do Usuário                                |

### Criação de Usuário [POST]

+ Request (application/json)

    + Body

            {
                "name": "José da Silva",
                "ssn": "12345678900",
                "gender": "Male",
                "address": {
                    "line1": "Rua das Flores",
                    "line2": "Apt. 25",
                    "number": "123",
                    "state": "RJ",
                    "city": "Rio de Janeiro",
                    "zipCode": "22123123"
                },
                "birthdate": "1981-04-21T00:00:00",
                "email": "jose@email.com",
                "password": "abc123",
            }

+ Response 201 (application/json)

    + Body

            {
                "userId": 1,
                "name": "José da Silva",
                "ssn": "12345678900",
                "gender": "Male",
                "address": {
                    "line1": "Rua das Flores",
                    "line2": "Apt. 25",
                    "number": "123",
                    "state": "RJ",
                    "city": "Rio de Janeiro",
                    "zipCode": "22123123"
                },
                "birthdate": "1981-04-21T00:00:00",
                "email": "jose@email.com"
            }

+ Request Requisição Inválida (application/json)

    + Body

            {
                "ssn": "12345678900",
                "gender": "Male",
                "address": {
                    "line1": "Rua das Flores",
                    "line2": "Apt. 25",
                    "number": "123",
                    "state": "RJ",
                    "city": "Rio de Janeiro",
                    "zipCode": "22123123"
                },
                "birthdate": "1981-04-21T00:00:00",
                "email": "jose@email.com",
                "password": "abc123",
            }

+ Response 400 (application/json)

    + Body

            {
                "message": "Invalid request.",
                "errors": [
                    {
                        "source": "userViewModel",
                        "message": [
                            "Name is required."
                        ]
                    }
                ]
            }
            
## Usuário específico [/users/{id}]

Seleção de Usuário com base em seu identificador.

### Seleção de Usuário específico [GET]

+ Parameters
    + id (required, number, `1`) de um Usuário

+ Request

    + Header
            
            SecurityToken: dXNlcjpwYXNzd29yZA==

+ Response 200 (application/json)

    + Header
    
            SecurityToken: dXNlcjpwYXNzd29yZA==
            
    + Body
    
            {
                "userId": 1,
                "name": "José da Silva",
                "ssn": "12345678900",
                "gender": "Male",
                "address": {
                    "line1": "Rua das Flores",
                    "line2": "Apt. 25",
                    "number": "123",
                    "state": "RJ",
                    "city": "Rio de Janeiro",
                    "zipCode": "22123123"
                },
                "birthdate": "1981-04-21T00:00:00",
                "email": "jose@email.com"
            }

+ Request Usuário Inexistente

    + Header
            
            SecurityToken: dXNlcjpwYXNzd29yZA==

+ Response 404 (application/json)

    + Header
    
            SecurityToken: dXNlcjpwYXNzd29yZA==
            
    + Body
    
            {
                "message": "User not found."
            }

## Cartões de Crédito do Usuário [/users/{id}/creditcards]

Seleção de cartões de crédito do Usuário.

### Seleção de Cartões de Crédito do Usuário [GET]

+ Parameters
    + id (required, number, `1`)

+ Request

    + Header
            
            SecurityToken: dXNlcjpwYXNzd29yZA==

+ Response 200 (application/json)

    + Header
    
            SecurityToken: dXNlcjpwYXNzd29yZA==
            
    + Body
    
            [
                {
                    "creditCardId": 1,
                    "brand": "Visa",
                    "lastFourDigits": "1111",
                    "expMonth": 10,
                    "expYear": 2018
                }
            ]

+ Request Usuário Inexistente

    + Header
            
            SecurityToken: dXNlcjpwYXNzd29yZA==

+ Response 404 (application/json)

    + Header
    
            SecurityToken: dXNlcjpwYXNzd29yZA==
            
    + Body
    
            {
                "message": "User not found."
            }
            
# Group Eventos

Recurso para manutenção de Eventos.

## Todos os Eventos [/events]

Permite a seleção de todos os Eventos.

## Campos do Evento

| Nome              | Descrição                                     |
|-------------------|-----------------------------------------------|
| `eventId`         | Identificador do Evento                       |
| `name`            | Nome completo do Evento                       |
| `description`     | Descrição do Evento                           |
| `price`           | Preço do Evento                               |
| `startDate`       | Data de Início do Evento                      |
| `endDate`         | Data de Término do Evento                     |
| `cardImageUrl`    | Imagem da chamada do Evento                   |
| `birthdate`       | Data de Nascimento do Evento                  |
| `email`           | E-mail do Evento                              |
| `password`        | Senha do Evento                               |
| `location.line1`  | Endereço do Evento                            |
| `location.line2`  | Complemento da localização do Evento          |
| `location.number` | Número da localização do Evento               |
| `location.state`  | Estado do Evento                              |
| `location.zipCode`| CEP do Evento                                 |

### Seleção de todos os Eventos [GET]

+ Request (application/json)

    + Header

+ Response 200 (application/json)

    + Header

    + Body
    
            [
                {
                    "eventId": 1,
                    "name": "Aprenda a Investir na Bolsa",
                    "description": "Neste curso passamos 10 ou 12 horas mostrando o ferramental dos mercados de renda variável, \r\n                                falamos sobre as bolsas de valores, sobre ações, opções, mercados futuros e fazemos uma introdução \r\n                                às duas escolas de análises: técnica e fundamentalista.",
                    "location": {
                        "line1": "Av. das Américas",
                        "line2": "Bloco 21, Sala 248 - Barra da Tijuca - Shopping Downtown",
                        "number": "500",
                        "state": "RJ",
                        "city": "Rio de Janeiro",
                        "zipCode": "22115456"
                    },
                    "price": 150,
                    "startDate": "2016-03-05T09:00:00",
                    "endDate": "2016-03-10T17:00:00",
                    "cardImageUrl": "http://ww2.baguete.com.br/admin//cache/sites/default/files/multimedia/imagens/noticia/92094-stock-market-rebounds-worst-day-year-read-more-http-business-time-com20130416stock-market-rebounds-w.jpg"
                }
            ]

## Evento específico [/events/{id}]

Seleção de um Evento com base em seu identificador.

### Seleção de Evento específico [GET]

+ Parameters
    + id (required, number, `1`)... `id` de um evento

+ Response 200 (application/json)

    + Header

    + Body
    
            {
                "eventId": 1,
                "name": "Aprenda a Investir na Bolsa",
                "description": "Neste curso passamos 10 ou 12 horas mostrando o ferramental dos mercados de renda variável, \r\n                                falamos sobre as bolsas de valores, sobre ações, opções, mercados futuros e fazemos uma introdução \r\n                                às duas escolas de análises: técnica e fundamentalista.",
                "location": {
                    "line1": "Av. das Américas",
                    "line2": "Bloco 21, Sala 248 - Barra da Tijuca - Shopping Downtown",
                    "number": "500",
                    "state": "RJ",
                    "city": "Rio de Janeiro",
                    "zipCode": "22115456"
                },
                "price": 150,
                "startDate": "2016-03-05T09:00:00",
                "endDate": "2016-03-10T17:00:00",
                "cardImageUrl": "http://ww2.baguete.com.br/admin//cache/sites/default/files/multimedia/imagens/noticia/92094-stock-market-rebounds-worst-day-year-read-more-http-business-time-com20130416stock-market-rebounds-w.jpg"
            }

+ Request Evento Inexistente

    + Header
            
            SecurityToken: dXNlcjpwYXNzd29yZA==

+ Response 404 (application/json)

    + Header
    
            SecurityToken: dXNlcjpwYXNzd29yZA==
            
    + Body
    
            {
                "message": "Event not found."
            }
            
# Group Pedidos

Recurso para manutenção de Pedidos.

## Novo Pedido [/orders]

Permite a criação de Pedidos.

> O formato da requisição pode ser de duas formas. Uma pode ser feita enviando 
os dados de um novo cartão de crédito. A outra opção é enviando apenas o 
identificador do cartão de crédito (`creditCardId`) do Usuário salvo em 
compras anteriores.

## Campos do Pedido

| Nome                              | Descrição                                                 |
|-----------------------------------|-----------------------------------------------------------|
| `eventId`                         | Identificador do Pedido                                   |
| `customer.userId`                 | Identificador do Comprador                                |
| `event.eventId`                   | Identificador do Evento                                   |
| `quantity`                        | Quantidade de ingressos para o Evento                     |
| `paymentInfo.creditCardNumber`    | Número do cartão de crédito                               |
| `paymentInfo.creditCardBrand`     | Bandeira do cartão de crédito                             |
| `paymentInfo.expMonth`            | Mês de validade do cartão de crédito                      |
| `paymentInfo.expYear`             | Ano de validade do cartão de crédito                      |
| `paymentInfo.securityCode`        | Código de segurança do cartão de crédito                  |
| `paymentInfo.holderName`          | Nome do portador do cartão de crédito                     |
| `paymentInfo.saveCreditCard`      | Opção para armazenar identificador do cartão de crédito   |
| `paymentInfo.creditCardId`        | Identificador do cartão de crédito já salvo               |

### Criação de Pedido [POST]

+ Request Novo cartão de crédito (application/json)

    + Header
    
            SecurityToken: dXNlcjpwYXNzd29yZA==

    + Body

            {
                customer: {
                    userId: 26
                },
                event: {
                    eventId: 1
                },
                quantity: 2,
                paymentInfo: {
                    creditCardNumber: "4111111111111111",
                    creditCardBrand: "Visa",
                    expMonth: 10,
                    expYear: 2018,
                    securityCode: 123,
                    holderName: "José da Silva",
                    saveCreditCard: true
                }
            }

+ Response 201 (application/json)

    + Header
    
            SecurityToken: dXNlcjpwYXNzd29yZA==

    + Body

            {
              "orderId": 1,
              "event": {
                "eventId": 1,
                "name": "Aprenda a Investir na Bolsa",
                "description": "Neste curso passamos 10 ou 12 horas mostrando o ferramental dos mercados de renda variável, \r\n                                falamos sobre as bolsas de valores, sobre ações, opções, mercados futuros e fazemos uma introdução \r\n                                às duas escolas de análises: técnica e fundamentalista.",
                "location": {
                  "line1": "Av. das Américas",
                  "line2": "Bloco 21, Sala 248 - Barra da Tijuca - Shopping Downtown",
                  "number": "500",
                  "state": "RJ",
                  "city": "Rio de Janeiro",
                  "zipCode": "22115456"
                },
                "price": 150.00,
                "startDate": "2016-03-05T09:00:00",
                "endDate": "2016-03-10T17:00:00",
                "cardImageUrl": "http://ww2.baguete.com.br/admin//cache/sites/default/files/multimedia/imagens/noticia/92094-stock-market-rebounds-worst-day-year-read-more-http-business-time-com20130416stock-market-rebounds-w.jpg"
              },
              "status": "Created",
              "quantity": 2
            }

+ Request Cartão de crédito salvo (application/json)

    + Header
    
            SecurityToken: dXNlcjpwYXNzd29yZA==

    + Body

            {
                customer: {
                    userId: 26
                },
                event: {
                    eventId: 1
                },
                quantity: 2,
                paymentInfo: {
                    creditCardId: 1
                }
            }

+ Response 201 (application/json)

    + Header
    
            SecurityToken: dXNlcjpwYXNzd29yZA==

    + Body

            {
              "orderId": 1,
              "event": {
                "eventId": 1,
                "name": "Aprenda a Investir na Bolsa",
                "description": "Neste curso passamos 10 ou 12 horas mostrando o ferramental dos mercados de renda variável, \r\n                                falamos sobre as bolsas de valores, sobre ações, opções, mercados futuros e fazemos uma introdução \r\n                                às duas escolas de análises: técnica e fundamentalista.",
                "location": {
                  "line1": "Av. das Américas",
                  "line2": "Bloco 21, Sala 248 - Barra da Tijuca - Shopping Downtown",
                  "number": "500",
                  "state": "RJ",
                  "city": "Rio de Janeiro",
                  "zipCode": "22115456"
                },
                "price": 150.00,
                "startDate": "2016-03-05T09:00:00",
                "endDate": "2016-03-10T17:00:00",
                "cardImageUrl": "http://ww2.baguete.com.br/admin//cache/sites/default/files/multimedia/imagens/noticia/92094-stock-market-rebounds-worst-day-year-read-more-http-business-time-com20130416stock-market-rebounds-w.jpg"
              },
              "status": "Created",
              "quantity": 2
            }
            
+ Request Requisição Inválida (application/json)

    + Header
    
            SecurityToken: dXNlcjpwYXNzd29yZA==

    + Body

            {
                customer: {
                    userId: 26
                },
                quantity: 2,
                paymentInfo: {
                    creditCardNumber: "4111111111111111",
                    creditCardBrand: "Visa",
                    expMonth: 10,
                    expYear: 2018,
                    securityCode: 123,
                    holderName: "José da Silva",
                    saveCreditCard: true
                }
            }

+ Response 400 (application/json)

    + Header
    
            SecurityToken: dXNlcjpwYXNzd29yZA==

    + Body

            {
                "message": "Invalid request.",
                "errors": [
                    {
                        "source": "orderViewModel",
                        "message": [
                            "Event is required."
                        ]
                    }
                ]
            }